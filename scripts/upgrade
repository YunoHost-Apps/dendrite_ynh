#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop" --wait_until="Dendrite is exiting now" --log_path="systemd"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

if ! groups $app | grep -q 'ssl-cert'; then
        adduser $app ssl-cert
fi

#=================================================
# GET CONFIG PANEL SETTINGS
#=================================================

server_name=$(ynh_app_setting_get --key=server_name)
domain=$(ynh_app_setting_get --key=domain)

registration_disabled=$(ynh_app_setting_get --key=registration_disabled)
disable_federation=$(ynh_app_setting_get --key=disable_federation)
guests_disabled=$(ynh_app_setting_get --key=guests_disabled)
registration_shared_secret=$(ynh_app_setting_get --key=registration_shared_secret)
enable_registration_captcha=$(ynh_app_setting_get --key=enable_registration_captcha)

#=================================================
# MIGRATION : Manage old settings
#=================================================

# Define $server_name if not already defined
# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=server_name --value=$domain
if [ -z ${server_name:-} ]; then
   server_name=$domain
   ynh_app_setting_set --key=server_name --value=$domain
fi

# Define $disable_federation if not already defined
# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=enable_registration_captcha --value="false"
if [ -z ${enable_registration_captcha:-} ]; then
   enable_registration_captcha="false"
   ynh_app_setting_set --key=enable_registration_captcha --value=$enable_registration_captcha
fi

# Define $guests_disabled if not already defined
# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=guests_disabled --value="true"
if [ -z ${guests_disabled:-} ]; then
   guests_disabled="true"
   ynh_app_setting_set --key=guests_disabled --value=$guests_disabled
fi

# Define $registration_shared_secret if not already defined
# FIXMEhelpers2.1: maybe replace with: ynh_app_setting_set_default --key=registration_shared_secret --value=""
if [ -z ${registration_shared_secret:-} ]; then
   registration_shared_secret=""
   ynh_app_setting_set --key=registration_shared_secret --value=$registration_shared_secret
fi

# Load up registration variables
registration=$(ynh_app_setting_get --key=registration)
if [ -z ${registration:-} ]; then
	if [[ $registration_disabled = *"alse" ]]
	then
		really_enable_open_registration="--really-enable-open-registration"
	else
		really_enable_open_registration=""
	fi
else
	ynh_app_setting_delete --key=registration
	if [[ $registration == *"rue" || $registration -eq 1 ]]
	then
		registration_disabled="false"
		really_enable_open_registration="--really-enable-open-registration"
		disable_federation="true"
		ynh_app_setting_set --key=registration_disabled --value=$registration_disabled
		ynh_app_setting_set --key=disable_federation --value=$disable_federation
	else
		registration_disabled="true"
		really_enable_open_registration=""
		disable_federation="false"
		ynh_app_setting_set --key=registration_disabled --value=$registration_disabled
		ynh_app_setting_set --key=disable_federation --value=$disable_federation
	fi
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir/build" --keep="dendrite.yaml" --full_replace

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 750 "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:root "$install_dir"
#=================================================
# BUILDING SOURCES AND SETTING UP THE SERVER
#=================================================
ynh_script_progression "Building the sources (it will take some time)..."

ynh_go_install

pushd "$install_dir/build"
	# Build the sources

	export PATH="$PATH"
	export GOPATH="$install_dir/build/go"
	export GOCACHE="$install_dir/build/.cache"
	export CGO_ENABLED=1
	ynh_hide_warnings go build -trimpath -v -o "$install_dir/bin/" ./cmd/dendrite
	ynh_hide_warnings go build -trimpath -v -o "$install_dir/bin/" ./cmd/create-account
	ynh_hide_warnings go build -trimpath -v -o "$install_dir/bin/" ./cmd/generate-keys
popd

ynh_safe_rm "$install_dir/build"
ynh_go_remove

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:root "$install_dir"
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

ynh_config_add --template="dendrite.yaml" --destination="$install_dir/dendrite.yaml"

chmod 400 "$install_dir/dendrite.yaml"
chown $app:$app "$install_dir/dendrite.yaml"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create .well-known redirection for access by federation
if yunohost --output-as plain domain list | grep -q "^$server_name$"
then
    ynh_config_add --template="server_name.conf" --destination="/etc/nginx/conf.d/${server_name}.d/${app}_server_name.conf"
fi

# Create a dedicated systemd config
ynh_config_add_systemd

yunohost service add $app --description="Dendrite Matrix homeserver" --log="/var/log/$app/$app.log" --needs_exposed_ports "$port_tls"

mkdir -p /var/log/$app
#REMOVEME? Assuming ynh_config_add_logrotate is called, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:root /var/log/$app

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start" --wait_until="Starting external listener" --log_path="systemd"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
